#!/bin/bash
# Wrapper script to ssh to a robot. It starts a private instance of ssh-agent
# that makes the user's github key (and only that key) available during the
# session. It also environment variables for the user's git identity, read
# from the local machine's ~/.gituser file.

function valid_ip()
{
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

function usage() {
    echo "Usage:  sshbar [-sph] <n>"
    echo " -h Display this help message"
    echo " -s Use barkey for authentication"
    echo " -p login to payload instead of truck (port 3022 or 3222)"
    echo " n = bar<n> or IP address"
    echo " Examples:"
    echo " sshbar 672"
    echo "     ssh bar@bar672"
    echo " sshbar -p 672"
    echo "     ssh -i /.ssh/id_rsa-<hostname>-github -p3022 bar@bar672"
    echo " sshbar -ps 672"
    echo "     ssh -i /data/.secrets/barkey -p3222 bar@bar672"
    echo " sshbar -s 672"
    echo "     ssh -i /data/.secrets/barkey -p2222 bar@bar672"
    echo " sshbar 10.10.39.209"
    echo "     ssh bar@10.10.39.209"
    exit 1
}


vpn=0
avpn=0
prod=0
payload=0
secret=0
while getopts ":hpsS:" opt; do
  case $opt in
    p)
        payload=1
        shift $((OPTIND-1))
      ;;
    S)
        secret_path=$OPTARG
        prod=1
        secret=1
        shift $((OPTIND-1))
      ;;
    s)
        prod=1
        secret=1
        if [ -z $SECRET_PATH ] ; then
            secret_path=$SECRET_PATH
        else
            secret_path='/data'
        fi
        shift $((OPTIND-1))
      ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        usage
      ;;
    h)
      usage
      ;;
  esac
done

if [ -z "$1" ] ; then
    usage
fi

host="${@: -1}"
if valid_ip ${@: -1}; then
    host="${@: -1}"
elif [[ ${host} =~ ^[0-9]+$ ]]; then
    host=bar${host};
fi

if [ $secret -eq 1 ] ; then
    id_file=${secret_path}/.secrets/barkey
else
    id_file=~/.ssh/id_rsa-$(hostname)-github
fi

zshell=0
xfor=0
if [ $prod -eq 1 ] ; then
    if [ $payload -eq 1 ] ; then
        port='3222'
    else
        port='2222'
    fi
    # ssh ${secret} -p${port} bar@${host}
elif [ $payload -eq 1 ] ; then
    port='3022'
    zshell=1
    xfor=1
    # ssh ${secret} -t -p${port} bar@${host}
else
    port='22'
    zshell=1
    xfor=1
fi

if [ $zshell -eq 1 ] ; then
    shell='zsh'
else
    shell='bash'
fi

if [ $xfor -eq 1 ] ; then
    options='-X -t -A'
else
    options='-t -A'
fi

uds_addr=$(mktemp --dry-run $XDG_RUNTIME_DIR/ssh-agent-XXXXXX)
git_email=$(sed -n -e 's/^\s\+email\s\?=\s\?//p' < ~/.gituser)
git_name=$(sed -n -e 's/^\s\+name\s\?=\s\?//p' < ~/.gituser | sed -e 's/\s/\\ /')

exec ssh-agent -a $uds_addr ssh ${options} -p${port} -l bar \
    -o IdentityFile=$id_file -o AddKeysToAgent=yes -l bar ${host} \
    GIT_AUTHOR_EMAIL="${git_email}" \
    GIT_COMMITTER_EMAIL="${git_email}" \
    GIT_AUTHOR_NAME="${git_name}" \
    GIT_COMMITTER_NAME="${git_name}" \
    EDITOR=emacs \
    ${shell} ;
